{
	"$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"plan": {
			"type": "string",
			"defaultValue": "boyankostadinov-app-service-plan",
			"minLength": 1
		},
		"planSku": {
			"type": "string",
			"defaultValue": "F1",
			"allowedValues": [
				"F1"
			],
			"metadata": {
				"description": "Describes plan's pricing tier and capacity. Check details at https://azure.microsoft.com/en-us/pricing/details/app-service/"
			}
		},
		"storageAccountType": {
			"type": "string",
			"defaultValue": "Standard_LRS",
			"allowedValues": [
				"Standard_LRS"
			]
		}
	},
	"variables": {
		"appService": "[concat('boyankostadinov-app-service-', uniqueString(resourceGroup().id))]",
		"appInsights": "[concat('boyankostadinov-app-insights-', uniqueString(resourceGroup().id))]",
		"storageAccount": "[concat('boyankostadinovstorage', uniqueString(resourceGroup().id))]",
		"serviceBus": "[concat('boyankostadinov-service-bus-', uniqueString(resourceGroup().id))]",
		"serviceBusQueue": "/starter.queue"
	},
	"resources": [
		{
			"name": "[parameters('plan')]",
			"type": "Microsoft.Web/serverfarms",
			"location": "[resourceGroup().location]",
			"apiVersion": "2018-02-01",
			"sku": {
				"name": "F1",
				"tier": "Free",
				"size": "F1",
				"family": "F",
				"capacity": 0
			},
			"kind": "app",
			"dependsOn": [],
			"tags": {
				"displayName": "App Service Plan"
			},
			"properties": {
				"name": "[parameters('plan')]",
				"numberOfWorkers": 1
			}
		},
		{
			"name": "[variables('appService')]",
			"type": "Microsoft.Web/sites",
			"location": "[resourceGroup().location]",
			"apiVersion": "2018-11-01",
			"kind": "app",
			"dependsOn": [
				"[resourceId('Microsoft.Web/serverfarms', parameters('plan'))]"
			],
			"tags": {
				"[concat('hidden-related:', resourceId('Microsoft.Web/serverfarms', parameters('plan')))]": "Resource",
				"displayName": "App Service"
			},
			"properties": {
				"name": "[variables('appService')]",
				"serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('plan'))]"
			}
		},
		{
			"name": "[variables('storageAccount')]",
			"type": "Microsoft.Storage/storageAccounts",
			"location": "[resourceGroup().location]",
			"apiVersion": "2019-04-01",
			"sku": {
				"name": "Standard_RAGRS",
				"tier": "Standard"
			},
			"dependsOn": [],
			"tags": {
				"displayName": "Storage Account"
			},
			"kind": "StorageV2"
		},
		{
			"name": "[concat(parameters('plan'), '-', resourceGroup().name)]",
			"type": "Microsoft.Insights/autoscalesettings",
			"location": "[resourceGroup().location]",
			"apiVersion": "2014-04-01",
			"dependsOn": [
				"[resourceId('Microsoft.Web/serverfarms', parameters('plan'))]"
			],
			"tags": {
				"[concat('hidden-link:', resourceId('Microsoft.Web/serverfarms', parameters('plan')))]": "Resource",
				"displayName": "AppInsights AutoScale"
			},
			"properties": {
				"name": "[concat(parameters('plan'), '-', resourceGroup().name)]",
				"profiles": [
					{
						"name": "Default",
						"capacity": {
							"minimum": 1,
							"maximum": 2,
							"default": 1
						},
						"rules": [
							{
								"metricTrigger": {
									"metricName": "CpuPercentage",
									"metricResourceUri": "[resourceId('Microsoft.Web/serverfarms', parameters('plan'))]",
									"timeGrain": "PT1M",
									"statistic": "Average",
									"timeWindow": "PT10M",
									"timeAggregation": "Average",
									"operator": "GreaterThan",
									"threshold": 80
								},
								"scaleAction": {
									"direction": "Increase",
									"type": "ChangeCount",
									"value": 1,
									"cooldown": "PT10M"
								}
							},
							{
								"metricTrigger": {
									"metricName": "CpuPercentage",
									"metricResourceUri": "[resourceId('Microsoft.Web/serverfarms', parameters('plan'))]",
									"timeGrain": "PT1M",
									"statistic": "Average",
									"timeWindow": "PT1H",
									"timeAggregation": "Average",
									"operator": "LessThan",
									"threshold": 60
								},
								"scaleAction": {
									"direction": "Decrease",
									"type": "ChangeCount",
									"value": 1,
									"cooldown": "PT1H"
								}
							}
						]
					}
				],
				"enabled": false,
				"targetResourceUri": "[resourceId('Microsoft.Web/serverfarms', parameters('plan'))]"
			}
		},
		{
			"type": "microsoft.insights/components",
			"apiVersion": "2015-05-01",
			"name": "[variables('appInsights')]",
			"location": "[resourceGroup().location]",
			"tags": {
				"displayName": "Application Insights"
			},
			"kind": "web",
			"properties": {
				"Application_Type": "web",
				"Flow_Type": "Redfield",
				"Request_Source": "WebTools16.0"
			}
		},
		{
			"apiVersion": "2015-08-01",
			"name": "[variables('serviceBus')]",
			"type": "Microsoft.ServiceBus/namespaces",
			"location": "[resourceGroup().location]",
			"tags": {
				"displayName": "Service Bus"
			}
		},
		{
			"type": "Microsoft.ServiceBus/namespaces/queues",
			"apiVersion": "2017-04-01",
			"name": "[concat(variables('serviceBus'), variables('serviceBusQueue'))]",
			"location": "[resourceGroup().location]",
			"dependsOn": [
				"[resourceId('Microsoft.ServiceBus/namespaces', variables('serviceBus'))]"
			],
			"properties": {
				"lockDuration": "PT30S",
				"maxSizeInMegabytes": 1024,
				"requiresDuplicateDetection": false,
				"requiresSession": false,
				"defaultMessageTimeToLive": "P14D",
				"deadLetteringOnMessageExpiration": false,
				"enableBatchedOperations": true,
				"duplicateDetectionHistoryTimeWindow": "PT10M",
				"maxDeliveryCount": 10,
				"status": "Active",
				"autoDeleteOnIdle": "P10675199DT2H48M5.4775807S",
				"enablePartitioning": false,
				"enableExpress": false
			}
		}
	],
	"outputs": {}
}