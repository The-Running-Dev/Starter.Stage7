trigger:
- master

pool:
  vmImage: 'ubuntu-18.04'

variables:
  projects: '**/*.csproj'
  buildConfiguration: 'Release'
  testProjects: '**/*.Tests/*.csproj'
  testBuildConfiguration: 'Test'
  apiProject: 'Starter.API'
  apiProjectDockerImage: 'starter.api'
  apiProjectContext: '$(Build.ArtifactStagingDirectory)/$(apiProject)'
  messageConsumerProject: 'Starter.MessageConsumer.Console'
  messageConsumerDockerImage: 'starter.messageconsumer.console'
  messageConsumerProjectContext: '$(Build.ArtifactStagingDirectory)/$(messageConsumerProject)'

steps:

- task: UseDotNet@2
  displayName: 'We Still Need 2.2...'
  inputs:
    version: '2.2.x'

- task: DotNetCoreCLI@2
  displayName: 'Converting to Bits...'
  inputs:
    command: build
    projects: '$(projects)'

- task: DotNetCoreCLI@2
  displayName: 'Common, Common, Pass Already...'
  inputs:
    command: test
    projects: '$(testProjects)'
    arguments: '--configuration $(testBuildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'Publishing API...'
  inputs:
    command: publish
    projects: '**/$(apiProject)/*.csproj'
    publishWebProjects: false
    arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'

- task: DotNetCoreCLI@2
  displayName: 'Publishing Message Consumer...'
  inputs:
    command: publish
    projects: '**/$(messageConsumerProject)/*.csproj'
    publishWebProjects: false
    arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'

- task: Docker@2
  displayName: 'Building API Container...'
  inputs:
    repository: '$(apiProjectDockerImage)'
    command: build
    dockerfile: '$(apiProject)/Dockerfile'
    buildContext: '$(Build.ArtifactStagingDirectory)/$(apiProject)'

- task: Docker@2
  displayName: 'Building Consumer Container...'
  inputs:
    repository: '$(messageConsumerDockerImage)'
    command: build
    dockerfile: '$(messageConsumerProject)/Dockerfile'
    buildContext: '$(Build.ArtifactStagingDirectory)/$(messageConsumerProject)'